akka {
  loglevel = "INFO"

  cluster {
    seed-nodes = []
    seed-nodes = ${?SEED_NODES}
    seed-node-timeout = 5s
    seed-node-timeout = ${?SEED_NODE_TIMEOUT}
    retry-unsuccessful-join-after = 5s
    retry-unsuccessful-join-after = ${?RETRY_SEED_NODE_TIMEOUT}
    roles = [compute]

    failure-detector {
      acceptable-heartbeat-pause = 5s
      threshold = 10
    }
  }

  coordinated-shutdown.run-by-jvm-shutdown-hook = on

  custom-downing {
    stable-after = 300s

    majority-leader-auto-downing {
      majority-member-role = ""
      down-if-in-minority = true
      shutdown-actor-system-on-resolution = true
    }
  }

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    deployment {
      "/workerActor" {
        router = round-robin-pool
        nr-of-instances = 2
        nr-of-instances = ${?WORKER_ACTOR_POOL_SIZE}
      }
    }
  }

  remote {
    maximum-payload-bytes = 10000000 bytes
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?HOSTNAME}
      bind-hostname = 0.0.0.0
      bind-hostname = ${?AKKA_REMOTING_BIND_HOST}
      port = 2551
      port = ${?PORT}
      message-frame-size = 10000000b
      send-buffer-size = 10000000b
      receive-buffer-size = 10000000b
      maximum-frame-size = 10000000b
    }
  }
}
